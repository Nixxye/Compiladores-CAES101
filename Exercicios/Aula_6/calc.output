Terminals unused in grammar

    THEN


State 85 conflicts: 7 shift/reduce
State 93 conflicts: 7 shift/reduce


Grammar

    0 $accept: program $end

    1 program: lines
    2        | QUIT NEWLINE

    3 lines: line
    4      | lines line

    5 line: declarations NEWLINE
    6     | commands NEWLINE

    7 declarations: declaration
    8             | declarations declaration

    9 declaration: INT ID END
   10            | FLOAT ID END
   11            | BOOL ID END

   12 commands: command
   13         | commands command

   14 command: if_command
   15        | assignments
   16        | read_command END
   17        | write_command END

   18 block: ε
   19      | block_element
   20      | block block_element

   21 block_element: declaration
   22              | command

   23 read_command: READ OPEN_PARENTHESIS ID CLOSE_PARENTHESIS

   24 write_command: WRITE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS

   25 assignments: assignment

   26 assignment: ID ASSIGN expression END
   27           | ID ASSIGN boolean_expression

   28 expression: term
   29           | expression PLUS term
   30           | expression MINUS term

   31 term: factor
   32     | term MULTIPLY factor
   33     | term DIVIDE factor

   34 factor: NUM
   35       | ID
   36       | OPEN_PARENTHESIS expression CLOSE_PARENTHESIS

   37 boolean_expression: TRUEbool
   38                   | FALSEbool
   39                   | NOT boolean_expression
   40                   | expression EQUAL expression
   41                   | expression NOT_EQUAL expression
   42                   | expression LESS expression
   43                   | expression GREATER expression
   44                   | expression LESS_EQUAL expression
   45                   | expression GREATER_EQUAL expression
   46                   | boolean_expression AND boolean_expression
   47                   | boolean_expression OR boolean_expression

   48 if_command: IF OPEN_PARENTHESIS boolean_expression CLOSE_PARENTHESIS OPEN_BRACKETS block CLOSE_BRACKETS ELSE OPEN_BRACKETS block CLOSE_BRACKETS
   49           | IF OPEN_PARENTHESIS boolean_expression CLOSE_PARENTHESIS OPEN_BRACKETS block CLOSE_BRACKETS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUM <float> (258) 34
    PLUS (259) 29
    MINUS (260) 30
    MULTIPLY (261) 32
    DIVIDE (262) 33
    ASSIGN (263) 26 27
    IF (264) 48 49
    THEN (265)
    ELSE (266) 48
    EQUAL (267) 40
    LESS (268) 42
    GREATER (269) 43
    LESS_EQUAL (270) 44
    NOT_EQUAL (271) 41
    GREATER_EQUAL (272) 45
    AND (273) 46
    OR (274) 47
    NOT (275) 39
    OPEN_BRACKETS (276) 48 49
    CLOSE_BRACKETS (277) 48 49
    OPEN_PARENTHESIS (278) 23 24 36 48 49
    CLOSE_PARENTHESIS (279) 23 24 36 48 49
    TRUEbool <int> (280) 37
    FALSEbool <int> (281) 38
    NEWLINE (282) 2 5 6
    QUIT (283) 2
    INT (284) 9
    FLOAT (285) 10
    BOOL (286) 11
    READ (287) 23
    WRITE (288) 24
    END (289) 9 10 11 16 17 26
    ID <char*> (290) 9 10 11 23 26 27 35


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    program (37)
        on left: 1 2
        on right: 0
    lines (38)
        on left: 3 4
        on right: 1 4
    line (39)
        on left: 5 6
        on right: 3 4
    declarations (40)
        on left: 7 8
        on right: 5 8
    declaration (41)
        on left: 9 10 11
        on right: 7 8 21
    commands (42)
        on left: 12 13
        on right: 6 13
    command (43)
        on left: 14 15 16 17
        on right: 12 13 22
    block (44)
        on left: 18 19 20
        on right: 20 48 49
    block_element (45)
        on left: 21 22
        on right: 19 20
    read_command (46)
        on left: 23
        on right: 16
    write_command (47)
        on left: 24
        on right: 17
    assignments (48)
        on left: 25
        on right: 15
    assignment (49)
        on left: 26 27
        on right: 25
    expression <llvm_val*> (50)
        on left: 28 29 30
        on right: 24 26 29 30 36 40 41 42 43 44 45
    term <llvm_val*> (51)
        on left: 31 32 33
        on right: 28 29 30 32 33
    factor <llvm_val*> (52)
        on left: 34 35 36
        on right: 31 32 33
    boolean_expression <llvm_val*> (53)
        on left: 37 38 39 40 41 42 43 44 45 46 47
        on right: 27 39 46 47 48 49
    if_command (54)
        on left: 48 49
        on right: 14


State 0

    0 $accept: • program $end

    IF     shift, and go to state 1
    QUIT   shift, and go to state 2
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4
    BOOL   shift, and go to state 5
    READ   shift, and go to state 6
    WRITE  shift, and go to state 7
    ID     shift, and go to state 8

    program        go to state 9
    lines          go to state 10
    line           go to state 11
    declarations   go to state 12
    declaration    go to state 13
    commands       go to state 14
    command        go to state 15
    read_command   go to state 16
    write_command  go to state 17
    assignments    go to state 18
    assignment     go to state 19
    if_command     go to state 20


State 1

   48 if_command: IF • OPEN_PARENTHESIS boolean_expression CLOSE_PARENTHESIS OPEN_BRACKETS block CLOSE_BRACKETS ELSE OPEN_BRACKETS block CLOSE_BRACKETS
   49           | IF • OPEN_PARENTHESIS boolean_expression CLOSE_PARENTHESIS OPEN_BRACKETS block CLOSE_BRACKETS

    OPEN_PARENTHESIS  shift, and go to state 21


State 2

    2 program: QUIT • NEWLINE

    NEWLINE  shift, and go to state 22


State 3

    9 declaration: INT • ID END

    ID  shift, and go to state 23


State 4

   10 declaration: FLOAT • ID END

    ID  shift, and go to state 24


State 5

   11 declaration: BOOL • ID END

    ID  shift, and go to state 25


State 6

   23 read_command: READ • OPEN_PARENTHESIS ID CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 26


State 7

   24 write_command: WRITE • OPEN_PARENTHESIS expression CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 27


State 8

   26 assignment: ID • ASSIGN expression END
   27           | ID • ASSIGN boolean_expression

    ASSIGN  shift, and go to state 28


State 9

    0 $accept: program • $end

    $end  shift, and go to state 29


State 10

    1 program: lines •
    4 lines: lines • line

    IF     shift, and go to state 1
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4
    BOOL   shift, and go to state 5
    READ   shift, and go to state 6
    WRITE  shift, and go to state 7
    ID     shift, and go to state 8

    $default  reduce using rule 1 (program)

    line           go to state 30
    declarations   go to state 12
    declaration    go to state 13
    commands       go to state 14
    command        go to state 15
    read_command   go to state 16
    write_command  go to state 17
    assignments    go to state 18
    assignment     go to state 19
    if_command     go to state 20


State 11

    3 lines: line •

    $default  reduce using rule 3 (lines)


State 12

    5 line: declarations • NEWLINE
    8 declarations: declarations • declaration

    NEWLINE  shift, and go to state 31
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    BOOL     shift, and go to state 5

    declaration  go to state 32


State 13

    7 declarations: declaration •

    $default  reduce using rule 7 (declarations)


State 14

    6 line: commands • NEWLINE
   13 commands: commands • command

    IF       shift, and go to state 1
    NEWLINE  shift, and go to state 33
    READ     shift, and go to state 6
    WRITE    shift, and go to state 7
    ID       shift, and go to state 8

    command        go to state 34
    read_command   go to state 16
    write_command  go to state 17
    assignments    go to state 18
    assignment     go to state 19
    if_command     go to state 20


State 15

   12 commands: command •

    $default  reduce using rule 12 (commands)


State 16

   16 command: read_command • END

    END  shift, and go to state 35


State 17

   17 command: write_command • END

    END  shift, and go to state 36


State 18

   15 command: assignments •

    $default  reduce using rule 15 (command)


State 19

   25 assignments: assignment •

    $default  reduce using rule 25 (assignments)


State 20

   14 command: if_command •

    $default  reduce using rule 14 (command)


State 21

   48 if_command: IF OPEN_PARENTHESIS • boolean_expression CLOSE_PARENTHESIS OPEN_BRACKETS block CLOSE_BRACKETS ELSE OPEN_BRACKETS block CLOSE_BRACKETS
   49           | IF OPEN_PARENTHESIS • boolean_expression CLOSE_PARENTHESIS OPEN_BRACKETS block CLOSE_BRACKETS

    NUM               shift, and go to state 37
    NOT               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 39
    TRUEbool          shift, and go to state 40
    FALSEbool         shift, and go to state 41
    ID                shift, and go to state 42

    expression          go to state 43
    term                go to state 44
    factor              go to state 45
    boolean_expression  go to state 46


State 22

    2 program: QUIT NEWLINE •

    $default  reduce using rule 2 (program)


State 23

    9 declaration: INT ID • END

    END  shift, and go to state 47


State 24

   10 declaration: FLOAT ID • END

    END  shift, and go to state 48


State 25

   11 declaration: BOOL ID • END

    END  shift, and go to state 49


State 26

   23 read_command: READ OPEN_PARENTHESIS • ID CLOSE_PARENTHESIS

    ID  shift, and go to state 50


State 27

   24 write_command: WRITE OPEN_PARENTHESIS • expression CLOSE_PARENTHESIS

    NUM               shift, and go to state 37
    OPEN_PARENTHESIS  shift, and go to state 39
    ID                shift, and go to state 42

    expression  go to state 51
    term        go to state 44
    factor      go to state 45


State 28

   26 assignment: ID ASSIGN • expression END
   27           | ID ASSIGN • boolean_expression

    NUM               shift, and go to state 37
    NOT               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 39
    TRUEbool          shift, and go to state 40
    FALSEbool         shift, and go to state 41
    ID                shift, and go to state 42

    expression          go to state 52
    term                go to state 44
    factor              go to state 45
    boolean_expression  go to state 53


State 29

    0 $accept: program $end •

    $default  accept


State 30

    4 lines: lines line •

    $default  reduce using rule 4 (lines)


State 31

    5 line: declarations NEWLINE •

    $default  reduce using rule 5 (line)


State 32

    8 declarations: declarations declaration •

    $default  reduce using rule 8 (declarations)


State 33

    6 line: commands NEWLINE •

    $default  reduce using rule 6 (line)


State 34

   13 commands: commands command •

    $default  reduce using rule 13 (commands)


State 35

   16 command: read_command END •

    $default  reduce using rule 16 (command)


State 36

   17 command: write_command END •

    $default  reduce using rule 17 (command)


State 37

   34 factor: NUM •

    $default  reduce using rule 34 (factor)


State 38

   39 boolean_expression: NOT • boolean_expression

    NUM               shift, and go to state 37
    NOT               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 39
    TRUEbool          shift, and go to state 40
    FALSEbool         shift, and go to state 41
    ID                shift, and go to state 42

    expression          go to state 43
    term                go to state 44
    factor              go to state 45
    boolean_expression  go to state 54


State 39

   36 factor: OPEN_PARENTHESIS • expression CLOSE_PARENTHESIS

    NUM               shift, and go to state 37
    OPEN_PARENTHESIS  shift, and go to state 39
    ID                shift, and go to state 42

    expression  go to state 55
    term        go to state 44
    factor      go to state 45


State 40

   37 boolean_expression: TRUEbool •

    $default  reduce using rule 37 (boolean_expression)


State 41

   38 boolean_expression: FALSEbool •

    $default  reduce using rule 38 (boolean_expression)


State 42

   35 factor: ID •

    $default  reduce using rule 35 (factor)


State 43

   29 expression: expression • PLUS term
   30           | expression • MINUS term
   40 boolean_expression: expression • EQUAL expression
   41                   | expression • NOT_EQUAL expression
   42                   | expression • LESS expression
   43                   | expression • GREATER expression
   44                   | expression • LESS_EQUAL expression
   45                   | expression • GREATER_EQUAL expression

    PLUS           shift, and go to state 56
    MINUS          shift, and go to state 57
    EQUAL          shift, and go to state 58
    LESS           shift, and go to state 59
    GREATER        shift, and go to state 60
    LESS_EQUAL     shift, and go to state 61
    NOT_EQUAL      shift, and go to state 62
    GREATER_EQUAL  shift, and go to state 63


State 44

   28 expression: term •
   32 term: term • MULTIPLY factor
   33     | term • DIVIDE factor

    MULTIPLY  shift, and go to state 64
    DIVIDE    shift, and go to state 65

    $default  reduce using rule 28 (expression)


State 45

   31 term: factor •

    $default  reduce using rule 31 (term)


State 46

   46 boolean_expression: boolean_expression • AND boolean_expression
   47                   | boolean_expression • OR boolean_expression
   48 if_command: IF OPEN_PARENTHESIS boolean_expression • CLOSE_PARENTHESIS OPEN_BRACKETS block CLOSE_BRACKETS ELSE OPEN_BRACKETS block CLOSE_BRACKETS
   49           | IF OPEN_PARENTHESIS boolean_expression • CLOSE_PARENTHESIS OPEN_BRACKETS block CLOSE_BRACKETS

    AND                shift, and go to state 66
    OR                 shift, and go to state 67
    CLOSE_PARENTHESIS  shift, and go to state 68


State 47

    9 declaration: INT ID END •

    $default  reduce using rule 9 (declaration)


State 48

   10 declaration: FLOAT ID END •

    $default  reduce using rule 10 (declaration)


State 49

   11 declaration: BOOL ID END •

    $default  reduce using rule 11 (declaration)


State 50

   23 read_command: READ OPEN_PARENTHESIS ID • CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 69


State 51

   24 write_command: WRITE OPEN_PARENTHESIS expression • CLOSE_PARENTHESIS
   29 expression: expression • PLUS term
   30           | expression • MINUS term

    PLUS               shift, and go to state 56
    MINUS              shift, and go to state 57
    CLOSE_PARENTHESIS  shift, and go to state 70


State 52

   26 assignment: ID ASSIGN expression • END
   29 expression: expression • PLUS term
   30           | expression • MINUS term
   40 boolean_expression: expression • EQUAL expression
   41                   | expression • NOT_EQUAL expression
   42                   | expression • LESS expression
   43                   | expression • GREATER expression
   44                   | expression • LESS_EQUAL expression
   45                   | expression • GREATER_EQUAL expression

    PLUS           shift, and go to state 56
    MINUS          shift, and go to state 57
    EQUAL          shift, and go to state 58
    LESS           shift, and go to state 59
    GREATER        shift, and go to state 60
    LESS_EQUAL     shift, and go to state 61
    NOT_EQUAL      shift, and go to state 62
    GREATER_EQUAL  shift, and go to state 63
    END            shift, and go to state 71


State 53

   27 assignment: ID ASSIGN boolean_expression •
   46 boolean_expression: boolean_expression • AND boolean_expression
   47                   | boolean_expression • OR boolean_expression

    AND  shift, and go to state 66
    OR   shift, and go to state 67

    $default  reduce using rule 27 (assignment)


State 54

   39 boolean_expression: NOT boolean_expression •
   46                   | boolean_expression • AND boolean_expression
   47                   | boolean_expression • OR boolean_expression

    $default  reduce using rule 39 (boolean_expression)


State 55

   29 expression: expression • PLUS term
   30           | expression • MINUS term
   36 factor: OPEN_PARENTHESIS expression • CLOSE_PARENTHESIS

    PLUS               shift, and go to state 56
    MINUS              shift, and go to state 57
    CLOSE_PARENTHESIS  shift, and go to state 72


State 56

   29 expression: expression PLUS • term

    NUM               shift, and go to state 37
    OPEN_PARENTHESIS  shift, and go to state 39
    ID                shift, and go to state 42

    term    go to state 73
    factor  go to state 45


State 57

   30 expression: expression MINUS • term

    NUM               shift, and go to state 37
    OPEN_PARENTHESIS  shift, and go to state 39
    ID                shift, and go to state 42

    term    go to state 74
    factor  go to state 45


State 58

   40 boolean_expression: expression EQUAL • expression

    NUM               shift, and go to state 37
    OPEN_PARENTHESIS  shift, and go to state 39
    ID                shift, and go to state 42

    expression  go to state 75
    term        go to state 44
    factor      go to state 45


State 59

   42 boolean_expression: expression LESS • expression

    NUM               shift, and go to state 37
    OPEN_PARENTHESIS  shift, and go to state 39
    ID                shift, and go to state 42

    expression  go to state 76
    term        go to state 44
    factor      go to state 45


State 60

   43 boolean_expression: expression GREATER • expression

    NUM               shift, and go to state 37
    OPEN_PARENTHESIS  shift, and go to state 39
    ID                shift, and go to state 42

    expression  go to state 77
    term        go to state 44
    factor      go to state 45


State 61

   44 boolean_expression: expression LESS_EQUAL • expression

    NUM               shift, and go to state 37
    OPEN_PARENTHESIS  shift, and go to state 39
    ID                shift, and go to state 42

    expression  go to state 78
    term        go to state 44
    factor      go to state 45


State 62

   41 boolean_expression: expression NOT_EQUAL • expression

    NUM               shift, and go to state 37
    OPEN_PARENTHESIS  shift, and go to state 39
    ID                shift, and go to state 42

    expression  go to state 79
    term        go to state 44
    factor      go to state 45


State 63

   45 boolean_expression: expression GREATER_EQUAL • expression

    NUM               shift, and go to state 37
    OPEN_PARENTHESIS  shift, and go to state 39
    ID                shift, and go to state 42

    expression  go to state 80
    term        go to state 44
    factor      go to state 45


State 64

   32 term: term MULTIPLY • factor

    NUM               shift, and go to state 37
    OPEN_PARENTHESIS  shift, and go to state 39
    ID                shift, and go to state 42

    factor  go to state 81


State 65

   33 term: term DIVIDE • factor

    NUM               shift, and go to state 37
    OPEN_PARENTHESIS  shift, and go to state 39
    ID                shift, and go to state 42

    factor  go to state 82


State 66

   46 boolean_expression: boolean_expression AND • boolean_expression

    NUM               shift, and go to state 37
    NOT               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 39
    TRUEbool          shift, and go to state 40
    FALSEbool         shift, and go to state 41
    ID                shift, and go to state 42

    expression          go to state 43
    term                go to state 44
    factor              go to state 45
    boolean_expression  go to state 83


State 67

   47 boolean_expression: boolean_expression OR • boolean_expression

    NUM               shift, and go to state 37
    NOT               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 39
    TRUEbool          shift, and go to state 40
    FALSEbool         shift, and go to state 41
    ID                shift, and go to state 42

    expression          go to state 43
    term                go to state 44
    factor              go to state 45
    boolean_expression  go to state 84


State 68

   48 if_command: IF OPEN_PARENTHESIS boolean_expression CLOSE_PARENTHESIS • OPEN_BRACKETS block CLOSE_BRACKETS ELSE OPEN_BRACKETS block CLOSE_BRACKETS
   49           | IF OPEN_PARENTHESIS boolean_expression CLOSE_PARENTHESIS • OPEN_BRACKETS block CLOSE_BRACKETS

    OPEN_BRACKETS  shift, and go to state 85


State 69

   23 read_command: READ OPEN_PARENTHESIS ID CLOSE_PARENTHESIS •

    $default  reduce using rule 23 (read_command)


State 70

   24 write_command: WRITE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS •

    $default  reduce using rule 24 (write_command)


State 71

   26 assignment: ID ASSIGN expression END •

    $default  reduce using rule 26 (assignment)


State 72

   36 factor: OPEN_PARENTHESIS expression CLOSE_PARENTHESIS •

    $default  reduce using rule 36 (factor)


State 73

   29 expression: expression PLUS term •
   32 term: term • MULTIPLY factor
   33     | term • DIVIDE factor

    MULTIPLY  shift, and go to state 64
    DIVIDE    shift, and go to state 65

    $default  reduce using rule 29 (expression)


State 74

   30 expression: expression MINUS term •
   32 term: term • MULTIPLY factor
   33     | term • DIVIDE factor

    MULTIPLY  shift, and go to state 64
    DIVIDE    shift, and go to state 65

    $default  reduce using rule 30 (expression)


State 75

   29 expression: expression • PLUS term
   30           | expression • MINUS term
   40 boolean_expression: expression EQUAL expression •

    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57

    $default  reduce using rule 40 (boolean_expression)


State 76

   29 expression: expression • PLUS term
   30           | expression • MINUS term
   42 boolean_expression: expression LESS expression •

    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57

    $default  reduce using rule 42 (boolean_expression)


State 77

   29 expression: expression • PLUS term
   30           | expression • MINUS term
   43 boolean_expression: expression GREATER expression •

    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57

    $default  reduce using rule 43 (boolean_expression)


State 78

   29 expression: expression • PLUS term
   30           | expression • MINUS term
   44 boolean_expression: expression LESS_EQUAL expression •

    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57

    $default  reduce using rule 44 (boolean_expression)


State 79

   29 expression: expression • PLUS term
   30           | expression • MINUS term
   41 boolean_expression: expression NOT_EQUAL expression •

    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57

    $default  reduce using rule 41 (boolean_expression)


State 80

   29 expression: expression • PLUS term
   30           | expression • MINUS term
   45 boolean_expression: expression GREATER_EQUAL expression •

    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57

    $default  reduce using rule 45 (boolean_expression)


State 81

   32 term: term MULTIPLY factor •

    $default  reduce using rule 32 (term)


State 82

   33 term: term DIVIDE factor •

    $default  reduce using rule 33 (term)


State 83

   46 boolean_expression: boolean_expression • AND boolean_expression
   46                   | boolean_expression AND boolean_expression •
   47                   | boolean_expression • OR boolean_expression

    $default  reduce using rule 46 (boolean_expression)


State 84

   46 boolean_expression: boolean_expression • AND boolean_expression
   47                   | boolean_expression • OR boolean_expression
   47                   | boolean_expression OR boolean_expression •

    $default  reduce using rule 47 (boolean_expression)


State 85

   48 if_command: IF OPEN_PARENTHESIS boolean_expression CLOSE_PARENTHESIS OPEN_BRACKETS • block CLOSE_BRACKETS ELSE OPEN_BRACKETS block CLOSE_BRACKETS
   49           | IF OPEN_PARENTHESIS boolean_expression CLOSE_PARENTHESIS OPEN_BRACKETS • block CLOSE_BRACKETS

    IF     shift, and go to state 1
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4
    BOOL   shift, and go to state 5
    READ   shift, and go to state 6
    WRITE  shift, and go to state 7
    ID     shift, and go to state 8

    IF        [reduce using rule 18 (block)]
    INT       [reduce using rule 18 (block)]
    FLOAT     [reduce using rule 18 (block)]
    BOOL      [reduce using rule 18 (block)]
    READ      [reduce using rule 18 (block)]
    WRITE     [reduce using rule 18 (block)]
    ID        [reduce using rule 18 (block)]
    $default  reduce using rule 18 (block)

    declaration    go to state 86
    command        go to state 87
    block          go to state 88
    block_element  go to state 89
    read_command   go to state 16
    write_command  go to state 17
    assignments    go to state 18
    assignment     go to state 19
    if_command     go to state 20


State 86

   21 block_element: declaration •

    $default  reduce using rule 21 (block_element)


State 87

   22 block_element: command •

    $default  reduce using rule 22 (block_element)


State 88

   20 block: block • block_element
   48 if_command: IF OPEN_PARENTHESIS boolean_expression CLOSE_PARENTHESIS OPEN_BRACKETS block • CLOSE_BRACKETS ELSE OPEN_BRACKETS block CLOSE_BRACKETS
   49           | IF OPEN_PARENTHESIS boolean_expression CLOSE_PARENTHESIS OPEN_BRACKETS block • CLOSE_BRACKETS

    IF              shift, and go to state 1
    CLOSE_BRACKETS  shift, and go to state 90
    INT             shift, and go to state 3
    FLOAT           shift, and go to state 4
    BOOL            shift, and go to state 5
    READ            shift, and go to state 6
    WRITE           shift, and go to state 7
    ID              shift, and go to state 8

    declaration    go to state 86
    command        go to state 87
    block_element  go to state 91
    read_command   go to state 16
    write_command  go to state 17
    assignments    go to state 18
    assignment     go to state 19
    if_command     go to state 20


State 89

   19 block: block_element •

    $default  reduce using rule 19 (block)


State 90

   48 if_command: IF OPEN_PARENTHESIS boolean_expression CLOSE_PARENTHESIS OPEN_BRACKETS block CLOSE_BRACKETS • ELSE OPEN_BRACKETS block CLOSE_BRACKETS
   49           | IF OPEN_PARENTHESIS boolean_expression CLOSE_PARENTHESIS OPEN_BRACKETS block CLOSE_BRACKETS •

    ELSE  shift, and go to state 92

    $default  reduce using rule 49 (if_command)


State 91

   20 block: block block_element •

    $default  reduce using rule 20 (block)


State 92

   48 if_command: IF OPEN_PARENTHESIS boolean_expression CLOSE_PARENTHESIS OPEN_BRACKETS block CLOSE_BRACKETS ELSE • OPEN_BRACKETS block CLOSE_BRACKETS

    OPEN_BRACKETS  shift, and go to state 93


State 93

   48 if_command: IF OPEN_PARENTHESIS boolean_expression CLOSE_PARENTHESIS OPEN_BRACKETS block CLOSE_BRACKETS ELSE OPEN_BRACKETS • block CLOSE_BRACKETS

    IF     shift, and go to state 1
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4
    BOOL   shift, and go to state 5
    READ   shift, and go to state 6
    WRITE  shift, and go to state 7
    ID     shift, and go to state 8

    IF        [reduce using rule 18 (block)]
    INT       [reduce using rule 18 (block)]
    FLOAT     [reduce using rule 18 (block)]
    BOOL      [reduce using rule 18 (block)]
    READ      [reduce using rule 18 (block)]
    WRITE     [reduce using rule 18 (block)]
    ID        [reduce using rule 18 (block)]
    $default  reduce using rule 18 (block)

    declaration    go to state 86
    command        go to state 87
    block          go to state 94
    block_element  go to state 89
    read_command   go to state 16
    write_command  go to state 17
    assignments    go to state 18
    assignment     go to state 19
    if_command     go to state 20


State 94

   20 block: block • block_element
   48 if_command: IF OPEN_PARENTHESIS boolean_expression CLOSE_PARENTHESIS OPEN_BRACKETS block CLOSE_BRACKETS ELSE OPEN_BRACKETS block • CLOSE_BRACKETS

    IF              shift, and go to state 1
    CLOSE_BRACKETS  shift, and go to state 95
    INT             shift, and go to state 3
    FLOAT           shift, and go to state 4
    BOOL            shift, and go to state 5
    READ            shift, and go to state 6
    WRITE           shift, and go to state 7
    ID              shift, and go to state 8

    declaration    go to state 86
    command        go to state 87
    block_element  go to state 91
    read_command   go to state 16
    write_command  go to state 17
    assignments    go to state 18
    assignment     go to state 19
    if_command     go to state 20


State 95

   48 if_command: IF OPEN_PARENTHESIS boolean_expression CLOSE_PARENTHESIS OPEN_BRACKETS block CLOSE_BRACKETS ELSE OPEN_BRACKETS block CLOSE_BRACKETS •

    $default  reduce using rule 48 (if_command)
