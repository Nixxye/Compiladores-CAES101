Terminals unused in grammar

    FUN
    THEN
    ELSE


State 17 conflicts: 4 shift/reduce
State 30 conflicts: 7 shift/reduce
State 34 conflicts: 4 shift/reduce
State 35 conflicts: 4 shift/reduce
State 36 conflicts: 4 shift/reduce
State 37 conflicts: 4 shift/reduce
State 38 conflicts: 4 shift/reduce
State 39 conflicts: 4 shift/reduce
State 40 conflicts: 4 shift/reduce


Grammar

    0 $accept: calculation $end

    1 calculation: ε
    2            | calculation line

    3 line: NEWLINE
    4     | expression NEWLINE
    5     | expression QUIT
    6     | boolean NEWLINE
    7     | if_command NEWLINE
    8     | QUIT NEWLINE

    9 expression: NUM
   10           | VAR
   11           | VAR ASSIGN expression
   12           | VAR ASSIGN boolean
   13           | expression PLUS expression
   14           | expression MINUS expression
   15           | expression MULTIPLY expression
   16           | expression DIVIDE expression

   17 boolean: TRUEbool
   18        | FALSEbool
   19        | expression EQUAL expression
   20        | expression AND expression
   21        | expression OR expression
   22        | NOT expression

   23 if_command: IF '(' boolean ')' '{' expression '}'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 23
    ')' (41) 23
    '{' (123) 23
    '}' (125) 23
    error (256)
    NUM <float> (258) 9
    VAR <symrec*> (259) 10 11 12
    FUN <symrec*> (260)
    PLUS (261) 13
    MINUS (262) 14
    MULTIPLY (263) 15
    DIVIDE (264) 16
    ASSIGN (265) 11 12
    IF (266) 23
    THEN (267)
    ELSE (268)
    EQUAL (269) 19
    AND (270) 20
    OR (271) 21
    NOT (272) 22
    TRUEbool <int> (273) 17
    FALSEbool <int> (274) 18
    NEWLINE (275) 3 4 6 7 8
    QUIT (276) 5 8


Nonterminals, with rules where they appear

    $accept (26)
        on left: 0
    calculation (27)
        on left: 1 2
        on right: 0 2
    line (28)
        on left: 3 4 5 6 7 8
        on right: 2
    expression <float> (29)
        on left: 9 10 11 12 13 14 15 16
        on right: 4 5 11 13 14 15 16 19 20 21 22 23
    boolean <int> (30)
        on left: 17 18 19 20 21 22
        on right: 6 12 23
    if_command <float> (31)
        on left: 23
        on right: 7


State 0

    0 $accept: • calculation $end

    $default  reduce using rule 1 (calculation)

    calculation  go to state 1


State 1

    0 $accept: calculation • $end
    2 calculation: calculation • line

    $end       shift, and go to state 2
    NUM        shift, and go to state 3
    VAR        shift, and go to state 4
    IF         shift, and go to state 5
    NOT        shift, and go to state 6
    TRUEbool   shift, and go to state 7
    FALSEbool  shift, and go to state 8
    NEWLINE    shift, and go to state 9
    QUIT       shift, and go to state 10

    line        go to state 11
    expression  go to state 12
    boolean     go to state 13
    if_command  go to state 14


State 2

    0 $accept: calculation $end •

    $default  accept


State 3

    9 expression: NUM •

    $default  reduce using rule 9 (expression)


State 4

   10 expression: VAR •
   11           | VAR • ASSIGN expression
   12           | VAR • ASSIGN boolean

    ASSIGN  shift, and go to state 15

    $default  reduce using rule 10 (expression)


State 5

   23 if_command: IF • '(' boolean ')' '{' expression '}'

    '('  shift, and go to state 16


State 6

   22 boolean: NOT • expression

    NUM  shift, and go to state 3
    VAR  shift, and go to state 4

    expression  go to state 17


State 7

   17 boolean: TRUEbool •

    $default  reduce using rule 17 (boolean)


State 8

   18 boolean: FALSEbool •

    $default  reduce using rule 18 (boolean)


State 9

    3 line: NEWLINE •

    $default  reduce using rule 3 (line)


State 10

    8 line: QUIT • NEWLINE

    NEWLINE  shift, and go to state 18


State 11

    2 calculation: calculation line •

    $default  reduce using rule 2 (calculation)


State 12

    4 line: expression • NEWLINE
    5     | expression • QUIT
   13 expression: expression • PLUS expression
   14           | expression • MINUS expression
   15           | expression • MULTIPLY expression
   16           | expression • DIVIDE expression
   19 boolean: expression • EQUAL expression
   20        | expression • AND expression
   21        | expression • OR expression

    PLUS      shift, and go to state 19
    MINUS     shift, and go to state 20
    MULTIPLY  shift, and go to state 21
    DIVIDE    shift, and go to state 22
    EQUAL     shift, and go to state 23
    AND       shift, and go to state 24
    OR        shift, and go to state 25
    NEWLINE   shift, and go to state 26
    QUIT      shift, and go to state 27


State 13

    6 line: boolean • NEWLINE

    NEWLINE  shift, and go to state 28


State 14

    7 line: if_command • NEWLINE

    NEWLINE  shift, and go to state 29


State 15

   11 expression: VAR ASSIGN • expression
   12           | VAR ASSIGN • boolean

    NUM        shift, and go to state 3
    VAR        shift, and go to state 4
    NOT        shift, and go to state 6
    TRUEbool   shift, and go to state 7
    FALSEbool  shift, and go to state 8

    expression  go to state 30
    boolean     go to state 31


State 16

   23 if_command: IF '(' • boolean ')' '{' expression '}'

    NUM        shift, and go to state 3
    VAR        shift, and go to state 4
    NOT        shift, and go to state 6
    TRUEbool   shift, and go to state 7
    FALSEbool  shift, and go to state 8

    expression  go to state 32
    boolean     go to state 33


State 17

   13 expression: expression • PLUS expression
   14           | expression • MINUS expression
   15           | expression • MULTIPLY expression
   16           | expression • DIVIDE expression
   22 boolean: NOT expression •

    PLUS      shift, and go to state 19
    MINUS     shift, and go to state 20
    MULTIPLY  shift, and go to state 21
    DIVIDE    shift, and go to state 22

    PLUS      [reduce using rule 22 (boolean)]
    MINUS     [reduce using rule 22 (boolean)]
    MULTIPLY  [reduce using rule 22 (boolean)]
    DIVIDE    [reduce using rule 22 (boolean)]
    $default  reduce using rule 22 (boolean)


State 18

    8 line: QUIT NEWLINE •

    $default  reduce using rule 8 (line)


State 19

   13 expression: expression PLUS • expression

    NUM  shift, and go to state 3
    VAR  shift, and go to state 4

    expression  go to state 34


State 20

   14 expression: expression MINUS • expression

    NUM  shift, and go to state 3
    VAR  shift, and go to state 4

    expression  go to state 35


State 21

   15 expression: expression MULTIPLY • expression

    NUM  shift, and go to state 3
    VAR  shift, and go to state 4

    expression  go to state 36


State 22

   16 expression: expression DIVIDE • expression

    NUM  shift, and go to state 3
    VAR  shift, and go to state 4

    expression  go to state 37


State 23

   19 boolean: expression EQUAL • expression

    NUM  shift, and go to state 3
    VAR  shift, and go to state 4

    expression  go to state 38


State 24

   20 boolean: expression AND • expression

    NUM  shift, and go to state 3
    VAR  shift, and go to state 4

    expression  go to state 39


State 25

   21 boolean: expression OR • expression

    NUM  shift, and go to state 3
    VAR  shift, and go to state 4

    expression  go to state 40


State 26

    4 line: expression NEWLINE •

    $default  reduce using rule 4 (line)


State 27

    5 line: expression QUIT •

    $default  reduce using rule 5 (line)


State 28

    6 line: boolean NEWLINE •

    $default  reduce using rule 6 (line)


State 29

    7 line: if_command NEWLINE •

    $default  reduce using rule 7 (line)


State 30

   11 expression: VAR ASSIGN expression •
   13           | expression • PLUS expression
   14           | expression • MINUS expression
   15           | expression • MULTIPLY expression
   16           | expression • DIVIDE expression
   19 boolean: expression • EQUAL expression
   20        | expression • AND expression
   21        | expression • OR expression

    PLUS      shift, and go to state 19
    MINUS     shift, and go to state 20
    MULTIPLY  shift, and go to state 21
    DIVIDE    shift, and go to state 22
    EQUAL     shift, and go to state 23
    AND       shift, and go to state 24
    OR        shift, and go to state 25

    PLUS      [reduce using rule 11 (expression)]
    MINUS     [reduce using rule 11 (expression)]
    MULTIPLY  [reduce using rule 11 (expression)]
    DIVIDE    [reduce using rule 11 (expression)]
    EQUAL     [reduce using rule 11 (expression)]
    AND       [reduce using rule 11 (expression)]
    OR        [reduce using rule 11 (expression)]
    $default  reduce using rule 11 (expression)


State 31

   12 expression: VAR ASSIGN boolean •

    $default  reduce using rule 12 (expression)


State 32

   13 expression: expression • PLUS expression
   14           | expression • MINUS expression
   15           | expression • MULTIPLY expression
   16           | expression • DIVIDE expression
   19 boolean: expression • EQUAL expression
   20        | expression • AND expression
   21        | expression • OR expression

    PLUS      shift, and go to state 19
    MINUS     shift, and go to state 20
    MULTIPLY  shift, and go to state 21
    DIVIDE    shift, and go to state 22
    EQUAL     shift, and go to state 23
    AND       shift, and go to state 24
    OR        shift, and go to state 25


State 33

   23 if_command: IF '(' boolean • ')' '{' expression '}'

    ')'  shift, and go to state 41


State 34

   13 expression: expression • PLUS expression
   13           | expression PLUS expression •
   14           | expression • MINUS expression
   15           | expression • MULTIPLY expression
   16           | expression • DIVIDE expression

    PLUS      shift, and go to state 19
    MINUS     shift, and go to state 20
    MULTIPLY  shift, and go to state 21
    DIVIDE    shift, and go to state 22

    PLUS      [reduce using rule 13 (expression)]
    MINUS     [reduce using rule 13 (expression)]
    MULTIPLY  [reduce using rule 13 (expression)]
    DIVIDE    [reduce using rule 13 (expression)]
    $default  reduce using rule 13 (expression)


State 35

   13 expression: expression • PLUS expression
   14           | expression • MINUS expression
   14           | expression MINUS expression •
   15           | expression • MULTIPLY expression
   16           | expression • DIVIDE expression

    PLUS      shift, and go to state 19
    MINUS     shift, and go to state 20
    MULTIPLY  shift, and go to state 21
    DIVIDE    shift, and go to state 22

    PLUS      [reduce using rule 14 (expression)]
    MINUS     [reduce using rule 14 (expression)]
    MULTIPLY  [reduce using rule 14 (expression)]
    DIVIDE    [reduce using rule 14 (expression)]
    $default  reduce using rule 14 (expression)


State 36

   13 expression: expression • PLUS expression
   14           | expression • MINUS expression
   15           | expression • MULTIPLY expression
   15           | expression MULTIPLY expression •
   16           | expression • DIVIDE expression

    PLUS      shift, and go to state 19
    MINUS     shift, and go to state 20
    MULTIPLY  shift, and go to state 21
    DIVIDE    shift, and go to state 22

    PLUS      [reduce using rule 15 (expression)]
    MINUS     [reduce using rule 15 (expression)]
    MULTIPLY  [reduce using rule 15 (expression)]
    DIVIDE    [reduce using rule 15 (expression)]
    $default  reduce using rule 15 (expression)


State 37

   13 expression: expression • PLUS expression
   14           | expression • MINUS expression
   15           | expression • MULTIPLY expression
   16           | expression • DIVIDE expression
   16           | expression DIVIDE expression •

    PLUS      shift, and go to state 19
    MINUS     shift, and go to state 20
    MULTIPLY  shift, and go to state 21
    DIVIDE    shift, and go to state 22

    PLUS      [reduce using rule 16 (expression)]
    MINUS     [reduce using rule 16 (expression)]
    MULTIPLY  [reduce using rule 16 (expression)]
    DIVIDE    [reduce using rule 16 (expression)]
    $default  reduce using rule 16 (expression)


State 38

   13 expression: expression • PLUS expression
   14           | expression • MINUS expression
   15           | expression • MULTIPLY expression
   16           | expression • DIVIDE expression
   19 boolean: expression EQUAL expression •

    PLUS      shift, and go to state 19
    MINUS     shift, and go to state 20
    MULTIPLY  shift, and go to state 21
    DIVIDE    shift, and go to state 22

    PLUS      [reduce using rule 19 (boolean)]
    MINUS     [reduce using rule 19 (boolean)]
    MULTIPLY  [reduce using rule 19 (boolean)]
    DIVIDE    [reduce using rule 19 (boolean)]
    $default  reduce using rule 19 (boolean)


State 39

   13 expression: expression • PLUS expression
   14           | expression • MINUS expression
   15           | expression • MULTIPLY expression
   16           | expression • DIVIDE expression
   20 boolean: expression AND expression •

    PLUS      shift, and go to state 19
    MINUS     shift, and go to state 20
    MULTIPLY  shift, and go to state 21
    DIVIDE    shift, and go to state 22

    PLUS      [reduce using rule 20 (boolean)]
    MINUS     [reduce using rule 20 (boolean)]
    MULTIPLY  [reduce using rule 20 (boolean)]
    DIVIDE    [reduce using rule 20 (boolean)]
    $default  reduce using rule 20 (boolean)


State 40

   13 expression: expression • PLUS expression
   14           | expression • MINUS expression
   15           | expression • MULTIPLY expression
   16           | expression • DIVIDE expression
   21 boolean: expression OR expression •

    PLUS      shift, and go to state 19
    MINUS     shift, and go to state 20
    MULTIPLY  shift, and go to state 21
    DIVIDE    shift, and go to state 22

    PLUS      [reduce using rule 21 (boolean)]
    MINUS     [reduce using rule 21 (boolean)]
    MULTIPLY  [reduce using rule 21 (boolean)]
    DIVIDE    [reduce using rule 21 (boolean)]
    $default  reduce using rule 21 (boolean)


State 41

   23 if_command: IF '(' boolean ')' • '{' expression '}'

    '{'  shift, and go to state 42


State 42

   23 if_command: IF '(' boolean ')' '{' • expression '}'

    NUM  shift, and go to state 3
    VAR  shift, and go to state 4

    expression  go to state 43


State 43

   13 expression: expression • PLUS expression
   14           | expression • MINUS expression
   15           | expression • MULTIPLY expression
   16           | expression • DIVIDE expression
   23 if_command: IF '(' boolean ')' '{' expression • '}'

    PLUS      shift, and go to state 19
    MINUS     shift, and go to state 20
    MULTIPLY  shift, and go to state 21
    DIVIDE    shift, and go to state 22
    '}'       shift, and go to state 44


State 44

   23 if_command: IF '(' boolean ')' '{' expression '}' •

    $default  reduce using rule 23 (if_command)
