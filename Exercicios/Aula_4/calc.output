Terminals unused in grammar

    FUN
    THEN


State 13 conflicts: 1 shift/reduce
State 18 conflicts: 12 shift/reduce
State 38 conflicts: 12 shift/reduce, 16 reduce/reduce
State 42 conflicts: 4 shift/reduce
State 43 conflicts: 4 shift/reduce
State 44 conflicts: 4 shift/reduce
State 45 conflicts: 4 shift/reduce
State 46 conflicts: 4 shift/reduce
State 47 conflicts: 4 shift/reduce
State 48 conflicts: 4 shift/reduce
State 49 conflicts: 4 shift/reduce
State 50 conflicts: 4 shift/reduce
State 51 conflicts: 4 shift/reduce
State 52 conflicts: 4 shift/reduce
State 53 conflicts: 4 shift/reduce


Grammar

    0 $accept: calculation $end

    1 calculation: ε
    2            | calculation line

    3 line: NEWLINE
    4     | expression NEWLINE
    5     | expression QUIT
    6     | boolean NEWLINE
    7     | if_command NEWLINE
    8     | QUIT NEWLINE

    9 expression: NUM
   10           | VAR
   11           | VAR ASSIGN expression
   12           | VAR ASSIGN boolean
   13           | OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
   14           | expression PLUS expression
   15           | expression MINUS expression
   16           | expression MULTIPLY expression
   17           | expression DIVIDE expression

   18 boolean: TRUEbool
   19        | FALSEbool
   20        | NOT boolean
   21        | expression EQUAL expression
   22        | expression LESS_EQUAL expression
   23        | expression GREATER_EQUAL expression
   24        | expression NOT_EQUAL expression
   25        | expression LESS expression
   26        | expression GREATER expression
   27        | expression OR expression
   28        | expression AND expression
   29        | expression

   30 if_command: IF OPEN_PARENTHESIS boolean CLOSE_PARENTHESIS OPEN_BRACKETS expression CLOSE_BRACKETS ELSE OPEN_BRACKETS expression CLOSE_BRACKETS
   31           | IF OPEN_PARENTHESIS boolean CLOSE_PARENTHESIS OPEN_BRACKETS expression CLOSE_BRACKETS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUM <float> (258) 9
    VAR <symrec*> (259) 10 11 12
    FUN <symrec*> (260)
    PLUS (261) 14
    MINUS (262) 15
    MULTIPLY (263) 16
    DIVIDE (264) 17
    ASSIGN (265) 11 12
    IF (266) 30 31
    THEN (267)
    ELSE (268) 30
    EQUAL (269) 21
    LESS (270) 25
    GREATER (271) 26
    LESS_EQUAL (272) 22
    NOT_EQUAL (273) 24
    GREATER_EQUAL (274) 23
    AND (275) 28
    OR (276) 27
    NOT (277) 20
    OPEN_BRACKETS (278) 30 31
    CLOSE_BRACKETS (279) 30 31
    OPEN_PARENTHESIS (280) 13 30 31
    CLOSE_PARENTHESIS (281) 13 30 31
    TRUEbool <int> (282) 18
    FALSEbool <int> (283) 19
    NEWLINE (284) 3 4 6 7 8
    QUIT (285) 5 8


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    calculation (32)
        on left: 1 2
        on right: 0 2
    line (33)
        on left: 3 4 5 6 7 8
        on right: 2
    expression <float> (34)
        on left: 9 10 11 12 13 14 15 16 17
        on right: 4 5 11 13 14 15 16 17 21 22 23 24 25 26 27 28 29 30 31
    boolean <int> (35)
        on left: 18 19 20 21 22 23 24 25 26 27 28 29
        on right: 6 12 20 30 31
    if_command <float> (36)
        on left: 30 31
        on right: 7


State 0

    0 $accept: • calculation $end

    $default  reduce using rule 1 (calculation)

    calculation  go to state 1


State 1

    0 $accept: calculation • $end
    2 calculation: calculation • line

    $end              shift, and go to state 2
    NUM               shift, and go to state 3
    VAR               shift, and go to state 4
    IF                shift, and go to state 5
    NOT               shift, and go to state 6
    OPEN_PARENTHESIS  shift, and go to state 7
    TRUEbool          shift, and go to state 8
    FALSEbool         shift, and go to state 9
    NEWLINE           shift, and go to state 10
    QUIT              shift, and go to state 11

    line        go to state 12
    expression  go to state 13
    boolean     go to state 14
    if_command  go to state 15


State 2

    0 $accept: calculation $end •

    $default  accept


State 3

    9 expression: NUM •

    $default  reduce using rule 9 (expression)


State 4

   10 expression: VAR •
   11           | VAR • ASSIGN expression
   12           | VAR • ASSIGN boolean

    ASSIGN  shift, and go to state 16

    $default  reduce using rule 10 (expression)


State 5

   30 if_command: IF • OPEN_PARENTHESIS boolean CLOSE_PARENTHESIS OPEN_BRACKETS expression CLOSE_BRACKETS ELSE OPEN_BRACKETS expression CLOSE_BRACKETS
   31           | IF • OPEN_PARENTHESIS boolean CLOSE_PARENTHESIS OPEN_BRACKETS expression CLOSE_BRACKETS

    OPEN_PARENTHESIS  shift, and go to state 17


State 6

   20 boolean: NOT • boolean

    NUM               shift, and go to state 3
    VAR               shift, and go to state 4
    NOT               shift, and go to state 6
    OPEN_PARENTHESIS  shift, and go to state 7
    TRUEbool          shift, and go to state 8
    FALSEbool         shift, and go to state 9

    expression  go to state 18
    boolean     go to state 19


State 7

   13 expression: OPEN_PARENTHESIS • expression CLOSE_PARENTHESIS

    NUM               shift, and go to state 3
    VAR               shift, and go to state 4
    OPEN_PARENTHESIS  shift, and go to state 7

    expression  go to state 20


State 8

   18 boolean: TRUEbool •

    $default  reduce using rule 18 (boolean)


State 9

   19 boolean: FALSEbool •

    $default  reduce using rule 19 (boolean)


State 10

    3 line: NEWLINE •

    $default  reduce using rule 3 (line)


State 11

    8 line: QUIT • NEWLINE

    NEWLINE  shift, and go to state 21


State 12

    2 calculation: calculation line •

    $default  reduce using rule 2 (calculation)


State 13

    4 line: expression • NEWLINE
    5     | expression • QUIT
   14 expression: expression • PLUS expression
   15           | expression • MINUS expression
   16           | expression • MULTIPLY expression
   17           | expression • DIVIDE expression
   21 boolean: expression • EQUAL expression
   22        | expression • LESS_EQUAL expression
   23        | expression • GREATER_EQUAL expression
   24        | expression • NOT_EQUAL expression
   25        | expression • LESS expression
   26        | expression • GREATER expression
   27        | expression • OR expression
   28        | expression • AND expression
   29        | expression •

    PLUS           shift, and go to state 22
    MINUS          shift, and go to state 23
    MULTIPLY       shift, and go to state 24
    DIVIDE         shift, and go to state 25
    EQUAL          shift, and go to state 26
    LESS           shift, and go to state 27
    GREATER        shift, and go to state 28
    LESS_EQUAL     shift, and go to state 29
    NOT_EQUAL      shift, and go to state 30
    GREATER_EQUAL  shift, and go to state 31
    AND            shift, and go to state 32
    OR             shift, and go to state 33
    NEWLINE        shift, and go to state 34
    QUIT           shift, and go to state 35

    NEWLINE  [reduce using rule 29 (boolean)]


State 14

    6 line: boolean • NEWLINE

    NEWLINE  shift, and go to state 36


State 15

    7 line: if_command • NEWLINE

    NEWLINE  shift, and go to state 37


State 16

   11 expression: VAR ASSIGN • expression
   12           | VAR ASSIGN • boolean

    NUM               shift, and go to state 3
    VAR               shift, and go to state 4
    NOT               shift, and go to state 6
    OPEN_PARENTHESIS  shift, and go to state 7
    TRUEbool          shift, and go to state 8
    FALSEbool         shift, and go to state 9

    expression  go to state 38
    boolean     go to state 39


State 17

   30 if_command: IF OPEN_PARENTHESIS • boolean CLOSE_PARENTHESIS OPEN_BRACKETS expression CLOSE_BRACKETS ELSE OPEN_BRACKETS expression CLOSE_BRACKETS
   31           | IF OPEN_PARENTHESIS • boolean CLOSE_PARENTHESIS OPEN_BRACKETS expression CLOSE_BRACKETS

    NUM               shift, and go to state 3
    VAR               shift, and go to state 4
    NOT               shift, and go to state 6
    OPEN_PARENTHESIS  shift, and go to state 7
    TRUEbool          shift, and go to state 8
    FALSEbool         shift, and go to state 9

    expression  go to state 18
    boolean     go to state 40


State 18

   14 expression: expression • PLUS expression
   15           | expression • MINUS expression
   16           | expression • MULTIPLY expression
   17           | expression • DIVIDE expression
   21 boolean: expression • EQUAL expression
   22        | expression • LESS_EQUAL expression
   23        | expression • GREATER_EQUAL expression
   24        | expression • NOT_EQUAL expression
   25        | expression • LESS expression
   26        | expression • GREATER expression
   27        | expression • OR expression
   28        | expression • AND expression
   29        | expression •

    PLUS           shift, and go to state 22
    MINUS          shift, and go to state 23
    MULTIPLY       shift, and go to state 24
    DIVIDE         shift, and go to state 25
    EQUAL          shift, and go to state 26
    LESS           shift, and go to state 27
    GREATER        shift, and go to state 28
    LESS_EQUAL     shift, and go to state 29
    NOT_EQUAL      shift, and go to state 30
    GREATER_EQUAL  shift, and go to state 31
    AND            shift, and go to state 32
    OR             shift, and go to state 33

    PLUS           [reduce using rule 29 (boolean)]
    MINUS          [reduce using rule 29 (boolean)]
    MULTIPLY       [reduce using rule 29 (boolean)]
    DIVIDE         [reduce using rule 29 (boolean)]
    EQUAL          [reduce using rule 29 (boolean)]
    LESS           [reduce using rule 29 (boolean)]
    GREATER        [reduce using rule 29 (boolean)]
    LESS_EQUAL     [reduce using rule 29 (boolean)]
    NOT_EQUAL      [reduce using rule 29 (boolean)]
    GREATER_EQUAL  [reduce using rule 29 (boolean)]
    AND            [reduce using rule 29 (boolean)]
    OR             [reduce using rule 29 (boolean)]
    $default       reduce using rule 29 (boolean)


State 19

   20 boolean: NOT boolean •

    $default  reduce using rule 20 (boolean)


State 20

   13 expression: OPEN_PARENTHESIS expression • CLOSE_PARENTHESIS
   14           | expression • PLUS expression
   15           | expression • MINUS expression
   16           | expression • MULTIPLY expression
   17           | expression • DIVIDE expression

    PLUS               shift, and go to state 22
    MINUS              shift, and go to state 23
    MULTIPLY           shift, and go to state 24
    DIVIDE             shift, and go to state 25
    CLOSE_PARENTHESIS  shift, and go to state 41


State 21

    8 line: QUIT NEWLINE •

    $default  reduce using rule 8 (line)


State 22

   14 expression: expression PLUS • expression

    NUM               shift, and go to state 3
    VAR               shift, and go to state 4
    OPEN_PARENTHESIS  shift, and go to state 7

    expression  go to state 42


State 23

   15 expression: expression MINUS • expression

    NUM               shift, and go to state 3
    VAR               shift, and go to state 4
    OPEN_PARENTHESIS  shift, and go to state 7

    expression  go to state 43


State 24

   16 expression: expression MULTIPLY • expression

    NUM               shift, and go to state 3
    VAR               shift, and go to state 4
    OPEN_PARENTHESIS  shift, and go to state 7

    expression  go to state 44


State 25

   17 expression: expression DIVIDE • expression

    NUM               shift, and go to state 3
    VAR               shift, and go to state 4
    OPEN_PARENTHESIS  shift, and go to state 7

    expression  go to state 45


State 26

   21 boolean: expression EQUAL • expression

    NUM               shift, and go to state 3
    VAR               shift, and go to state 4
    OPEN_PARENTHESIS  shift, and go to state 7

    expression  go to state 46


State 27

   25 boolean: expression LESS • expression

    NUM               shift, and go to state 3
    VAR               shift, and go to state 4
    OPEN_PARENTHESIS  shift, and go to state 7

    expression  go to state 47


State 28

   26 boolean: expression GREATER • expression

    NUM               shift, and go to state 3
    VAR               shift, and go to state 4
    OPEN_PARENTHESIS  shift, and go to state 7

    expression  go to state 48


State 29

   22 boolean: expression LESS_EQUAL • expression

    NUM               shift, and go to state 3
    VAR               shift, and go to state 4
    OPEN_PARENTHESIS  shift, and go to state 7

    expression  go to state 49


State 30

   24 boolean: expression NOT_EQUAL • expression

    NUM               shift, and go to state 3
    VAR               shift, and go to state 4
    OPEN_PARENTHESIS  shift, and go to state 7

    expression  go to state 50


State 31

   23 boolean: expression GREATER_EQUAL • expression

    NUM               shift, and go to state 3
    VAR               shift, and go to state 4
    OPEN_PARENTHESIS  shift, and go to state 7

    expression  go to state 51


State 32

   28 boolean: expression AND • expression

    NUM               shift, and go to state 3
    VAR               shift, and go to state 4
    OPEN_PARENTHESIS  shift, and go to state 7

    expression  go to state 52


State 33

   27 boolean: expression OR • expression

    NUM               shift, and go to state 3
    VAR               shift, and go to state 4
    OPEN_PARENTHESIS  shift, and go to state 7

    expression  go to state 53


State 34

    4 line: expression NEWLINE •

    $default  reduce using rule 4 (line)


State 35

    5 line: expression QUIT •

    $default  reduce using rule 5 (line)


State 36

    6 line: boolean NEWLINE •

    $default  reduce using rule 6 (line)


State 37

    7 line: if_command NEWLINE •

    $default  reduce using rule 7 (line)


State 38

   11 expression: VAR ASSIGN expression •
   14           | expression • PLUS expression
   15           | expression • MINUS expression
   16           | expression • MULTIPLY expression
   17           | expression • DIVIDE expression
   21 boolean: expression • EQUAL expression
   22        | expression • LESS_EQUAL expression
   23        | expression • GREATER_EQUAL expression
   24        | expression • NOT_EQUAL expression
   25        | expression • LESS expression
   26        | expression • GREATER expression
   27        | expression • OR expression
   28        | expression • AND expression
   29        | expression •

    PLUS           shift, and go to state 22
    MINUS          shift, and go to state 23
    MULTIPLY       shift, and go to state 24
    DIVIDE         shift, and go to state 25
    EQUAL          shift, and go to state 26
    LESS           shift, and go to state 27
    GREATER        shift, and go to state 28
    LESS_EQUAL     shift, and go to state 29
    NOT_EQUAL      shift, and go to state 30
    GREATER_EQUAL  shift, and go to state 31
    AND            shift, and go to state 32
    OR             shift, and go to state 33

    PLUS               [reduce using rule 11 (expression)]
    PLUS               [reduce using rule 29 (boolean)]
    MINUS              [reduce using rule 11 (expression)]
    MINUS              [reduce using rule 29 (boolean)]
    MULTIPLY           [reduce using rule 11 (expression)]
    MULTIPLY           [reduce using rule 29 (boolean)]
    DIVIDE             [reduce using rule 11 (expression)]
    DIVIDE             [reduce using rule 29 (boolean)]
    EQUAL              [reduce using rule 11 (expression)]
    EQUAL              [reduce using rule 29 (boolean)]
    LESS               [reduce using rule 11 (expression)]
    LESS               [reduce using rule 29 (boolean)]
    GREATER            [reduce using rule 11 (expression)]
    GREATER            [reduce using rule 29 (boolean)]
    LESS_EQUAL         [reduce using rule 11 (expression)]
    LESS_EQUAL         [reduce using rule 29 (boolean)]
    NOT_EQUAL          [reduce using rule 11 (expression)]
    NOT_EQUAL          [reduce using rule 29 (boolean)]
    GREATER_EQUAL      [reduce using rule 11 (expression)]
    GREATER_EQUAL      [reduce using rule 29 (boolean)]
    AND                [reduce using rule 11 (expression)]
    AND                [reduce using rule 29 (boolean)]
    OR                 [reduce using rule 11 (expression)]
    OR                 [reduce using rule 29 (boolean)]
    CLOSE_BRACKETS     reduce using rule 11 (expression)
    CLOSE_BRACKETS     [reduce using rule 29 (boolean)]
    CLOSE_PARENTHESIS  reduce using rule 11 (expression)
    CLOSE_PARENTHESIS  [reduce using rule 29 (boolean)]
    NEWLINE            reduce using rule 11 (expression)
    NEWLINE            [reduce using rule 29 (boolean)]
    QUIT               reduce using rule 11 (expression)
    QUIT               [reduce using rule 29 (boolean)]
    $default           reduce using rule 11 (expression)


State 39

   12 expression: VAR ASSIGN boolean •

    $default  reduce using rule 12 (expression)


State 40

   30 if_command: IF OPEN_PARENTHESIS boolean • CLOSE_PARENTHESIS OPEN_BRACKETS expression CLOSE_BRACKETS ELSE OPEN_BRACKETS expression CLOSE_BRACKETS
   31           | IF OPEN_PARENTHESIS boolean • CLOSE_PARENTHESIS OPEN_BRACKETS expression CLOSE_BRACKETS

    CLOSE_PARENTHESIS  shift, and go to state 54


State 41

   13 expression: OPEN_PARENTHESIS expression CLOSE_PARENTHESIS •

    $default  reduce using rule 13 (expression)


State 42

   14 expression: expression • PLUS expression
   14           | expression PLUS expression •
   15           | expression • MINUS expression
   16           | expression • MULTIPLY expression
   17           | expression • DIVIDE expression

    PLUS      shift, and go to state 22
    MINUS     shift, and go to state 23
    MULTIPLY  shift, and go to state 24
    DIVIDE    shift, and go to state 25

    PLUS      [reduce using rule 14 (expression)]
    MINUS     [reduce using rule 14 (expression)]
    MULTIPLY  [reduce using rule 14 (expression)]
    DIVIDE    [reduce using rule 14 (expression)]
    $default  reduce using rule 14 (expression)


State 43

   14 expression: expression • PLUS expression
   15           | expression • MINUS expression
   15           | expression MINUS expression •
   16           | expression • MULTIPLY expression
   17           | expression • DIVIDE expression

    PLUS      shift, and go to state 22
    MINUS     shift, and go to state 23
    MULTIPLY  shift, and go to state 24
    DIVIDE    shift, and go to state 25

    PLUS      [reduce using rule 15 (expression)]
    MINUS     [reduce using rule 15 (expression)]
    MULTIPLY  [reduce using rule 15 (expression)]
    DIVIDE    [reduce using rule 15 (expression)]
    $default  reduce using rule 15 (expression)


State 44

   14 expression: expression • PLUS expression
   15           | expression • MINUS expression
   16           | expression • MULTIPLY expression
   16           | expression MULTIPLY expression •
   17           | expression • DIVIDE expression

    PLUS      shift, and go to state 22
    MINUS     shift, and go to state 23
    MULTIPLY  shift, and go to state 24
    DIVIDE    shift, and go to state 25

    PLUS      [reduce using rule 16 (expression)]
    MINUS     [reduce using rule 16 (expression)]
    MULTIPLY  [reduce using rule 16 (expression)]
    DIVIDE    [reduce using rule 16 (expression)]
    $default  reduce using rule 16 (expression)


State 45

   14 expression: expression • PLUS expression
   15           | expression • MINUS expression
   16           | expression • MULTIPLY expression
   17           | expression • DIVIDE expression
   17           | expression DIVIDE expression •

    PLUS      shift, and go to state 22
    MINUS     shift, and go to state 23
    MULTIPLY  shift, and go to state 24
    DIVIDE    shift, and go to state 25

    PLUS      [reduce using rule 17 (expression)]
    MINUS     [reduce using rule 17 (expression)]
    MULTIPLY  [reduce using rule 17 (expression)]
    DIVIDE    [reduce using rule 17 (expression)]
    $default  reduce using rule 17 (expression)


State 46

   14 expression: expression • PLUS expression
   15           | expression • MINUS expression
   16           | expression • MULTIPLY expression
   17           | expression • DIVIDE expression
   21 boolean: expression EQUAL expression •

    PLUS      shift, and go to state 22
    MINUS     shift, and go to state 23
    MULTIPLY  shift, and go to state 24
    DIVIDE    shift, and go to state 25

    PLUS      [reduce using rule 21 (boolean)]
    MINUS     [reduce using rule 21 (boolean)]
    MULTIPLY  [reduce using rule 21 (boolean)]
    DIVIDE    [reduce using rule 21 (boolean)]
    $default  reduce using rule 21 (boolean)


State 47

   14 expression: expression • PLUS expression
   15           | expression • MINUS expression
   16           | expression • MULTIPLY expression
   17           | expression • DIVIDE expression
   25 boolean: expression LESS expression •

    PLUS      shift, and go to state 22
    MINUS     shift, and go to state 23
    MULTIPLY  shift, and go to state 24
    DIVIDE    shift, and go to state 25

    PLUS      [reduce using rule 25 (boolean)]
    MINUS     [reduce using rule 25 (boolean)]
    MULTIPLY  [reduce using rule 25 (boolean)]
    DIVIDE    [reduce using rule 25 (boolean)]
    $default  reduce using rule 25 (boolean)


State 48

   14 expression: expression • PLUS expression
   15           | expression • MINUS expression
   16           | expression • MULTIPLY expression
   17           | expression • DIVIDE expression
   26 boolean: expression GREATER expression •

    PLUS      shift, and go to state 22
    MINUS     shift, and go to state 23
    MULTIPLY  shift, and go to state 24
    DIVIDE    shift, and go to state 25

    PLUS      [reduce using rule 26 (boolean)]
    MINUS     [reduce using rule 26 (boolean)]
    MULTIPLY  [reduce using rule 26 (boolean)]
    DIVIDE    [reduce using rule 26 (boolean)]
    $default  reduce using rule 26 (boolean)


State 49

   14 expression: expression • PLUS expression
   15           | expression • MINUS expression
   16           | expression • MULTIPLY expression
   17           | expression • DIVIDE expression
   22 boolean: expression LESS_EQUAL expression •

    PLUS      shift, and go to state 22
    MINUS     shift, and go to state 23
    MULTIPLY  shift, and go to state 24
    DIVIDE    shift, and go to state 25

    PLUS      [reduce using rule 22 (boolean)]
    MINUS     [reduce using rule 22 (boolean)]
    MULTIPLY  [reduce using rule 22 (boolean)]
    DIVIDE    [reduce using rule 22 (boolean)]
    $default  reduce using rule 22 (boolean)


State 50

   14 expression: expression • PLUS expression
   15           | expression • MINUS expression
   16           | expression • MULTIPLY expression
   17           | expression • DIVIDE expression
   24 boolean: expression NOT_EQUAL expression •

    PLUS      shift, and go to state 22
    MINUS     shift, and go to state 23
    MULTIPLY  shift, and go to state 24
    DIVIDE    shift, and go to state 25

    PLUS      [reduce using rule 24 (boolean)]
    MINUS     [reduce using rule 24 (boolean)]
    MULTIPLY  [reduce using rule 24 (boolean)]
    DIVIDE    [reduce using rule 24 (boolean)]
    $default  reduce using rule 24 (boolean)


State 51

   14 expression: expression • PLUS expression
   15           | expression • MINUS expression
   16           | expression • MULTIPLY expression
   17           | expression • DIVIDE expression
   23 boolean: expression GREATER_EQUAL expression •

    PLUS      shift, and go to state 22
    MINUS     shift, and go to state 23
    MULTIPLY  shift, and go to state 24
    DIVIDE    shift, and go to state 25

    PLUS      [reduce using rule 23 (boolean)]
    MINUS     [reduce using rule 23 (boolean)]
    MULTIPLY  [reduce using rule 23 (boolean)]
    DIVIDE    [reduce using rule 23 (boolean)]
    $default  reduce using rule 23 (boolean)


State 52

   14 expression: expression • PLUS expression
   15           | expression • MINUS expression
   16           | expression • MULTIPLY expression
   17           | expression • DIVIDE expression
   28 boolean: expression AND expression •

    PLUS      shift, and go to state 22
    MINUS     shift, and go to state 23
    MULTIPLY  shift, and go to state 24
    DIVIDE    shift, and go to state 25

    PLUS      [reduce using rule 28 (boolean)]
    MINUS     [reduce using rule 28 (boolean)]
    MULTIPLY  [reduce using rule 28 (boolean)]
    DIVIDE    [reduce using rule 28 (boolean)]
    $default  reduce using rule 28 (boolean)


State 53

   14 expression: expression • PLUS expression
   15           | expression • MINUS expression
   16           | expression • MULTIPLY expression
   17           | expression • DIVIDE expression
   27 boolean: expression OR expression •

    PLUS      shift, and go to state 22
    MINUS     shift, and go to state 23
    MULTIPLY  shift, and go to state 24
    DIVIDE    shift, and go to state 25

    PLUS      [reduce using rule 27 (boolean)]
    MINUS     [reduce using rule 27 (boolean)]
    MULTIPLY  [reduce using rule 27 (boolean)]
    DIVIDE    [reduce using rule 27 (boolean)]
    $default  reduce using rule 27 (boolean)


State 54

   30 if_command: IF OPEN_PARENTHESIS boolean CLOSE_PARENTHESIS • OPEN_BRACKETS expression CLOSE_BRACKETS ELSE OPEN_BRACKETS expression CLOSE_BRACKETS
   31           | IF OPEN_PARENTHESIS boolean CLOSE_PARENTHESIS • OPEN_BRACKETS expression CLOSE_BRACKETS

    OPEN_BRACKETS  shift, and go to state 55


State 55

   30 if_command: IF OPEN_PARENTHESIS boolean CLOSE_PARENTHESIS OPEN_BRACKETS • expression CLOSE_BRACKETS ELSE OPEN_BRACKETS expression CLOSE_BRACKETS
   31           | IF OPEN_PARENTHESIS boolean CLOSE_PARENTHESIS OPEN_BRACKETS • expression CLOSE_BRACKETS

    NUM               shift, and go to state 3
    VAR               shift, and go to state 4
    OPEN_PARENTHESIS  shift, and go to state 7

    expression  go to state 56


State 56

   14 expression: expression • PLUS expression
   15           | expression • MINUS expression
   16           | expression • MULTIPLY expression
   17           | expression • DIVIDE expression
   30 if_command: IF OPEN_PARENTHESIS boolean CLOSE_PARENTHESIS OPEN_BRACKETS expression • CLOSE_BRACKETS ELSE OPEN_BRACKETS expression CLOSE_BRACKETS
   31           | IF OPEN_PARENTHESIS boolean CLOSE_PARENTHESIS OPEN_BRACKETS expression • CLOSE_BRACKETS

    PLUS            shift, and go to state 22
    MINUS           shift, and go to state 23
    MULTIPLY        shift, and go to state 24
    DIVIDE          shift, and go to state 25
    CLOSE_BRACKETS  shift, and go to state 57


State 57

   30 if_command: IF OPEN_PARENTHESIS boolean CLOSE_PARENTHESIS OPEN_BRACKETS expression CLOSE_BRACKETS • ELSE OPEN_BRACKETS expression CLOSE_BRACKETS
   31           | IF OPEN_PARENTHESIS boolean CLOSE_PARENTHESIS OPEN_BRACKETS expression CLOSE_BRACKETS •

    ELSE  shift, and go to state 58

    $default  reduce using rule 31 (if_command)


State 58

   30 if_command: IF OPEN_PARENTHESIS boolean CLOSE_PARENTHESIS OPEN_BRACKETS expression CLOSE_BRACKETS ELSE • OPEN_BRACKETS expression CLOSE_BRACKETS

    OPEN_BRACKETS  shift, and go to state 59


State 59

   30 if_command: IF OPEN_PARENTHESIS boolean CLOSE_PARENTHESIS OPEN_BRACKETS expression CLOSE_BRACKETS ELSE OPEN_BRACKETS • expression CLOSE_BRACKETS

    NUM               shift, and go to state 3
    VAR               shift, and go to state 4
    OPEN_PARENTHESIS  shift, and go to state 7

    expression  go to state 60


State 60

   14 expression: expression • PLUS expression
   15           | expression • MINUS expression
   16           | expression • MULTIPLY expression
   17           | expression • DIVIDE expression
   30 if_command: IF OPEN_PARENTHESIS boolean CLOSE_PARENTHESIS OPEN_BRACKETS expression CLOSE_BRACKETS ELSE OPEN_BRACKETS expression • CLOSE_BRACKETS

    PLUS            shift, and go to state 22
    MINUS           shift, and go to state 23
    MULTIPLY        shift, and go to state 24
    DIVIDE          shift, and go to state 25
    CLOSE_BRACKETS  shift, and go to state 61


State 61

   30 if_command: IF OPEN_PARENTHESIS boolean CLOSE_PARENTHESIS OPEN_BRACKETS expression CLOSE_BRACKETS ELSE OPEN_BRACKETS expression CLOSE_BRACKETS •

    $default  reduce using rule 30 (if_command)
